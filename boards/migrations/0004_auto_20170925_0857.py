# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-09-25 08:57
from __future__ import unicode_literals

from django.db import migrations, IntegrityError
from django.utils.text import slugify
from django.utils.crypto import get_random_string


def slugify_names(apps, schema_editor):
    '''
    We can't import the Board model directly as it may be a newer
    version than this migration expects. We use the historical version.
    '''
    Board = apps.get_model('boards', 'Board')
    for board in Board.objects.all():
        try:
            board.slug = slugify(board.name)
            board.save()
        except IntegrityError:
            '''
            Even though the Board.name is marked as unique, `Django` and `django`
            would produce the same slug. Create a fall back with a random slug
            This is unlike to happen, but just in case.
            '''
            slug = slugify(get_random_string(10))
            while Board.objects.filter(slug=slug).exists():
                slug = slugify(get_random_string(10))
            board.slug = slug
            board.save()


class Migration(migrations.Migration):

    dependencies = [
        ('boards', '0003_board_slug'),
    ]

    operations = [
        migrations.RunPython(slugify_names),
    ]
